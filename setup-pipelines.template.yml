AWSTemplateFormatVersion: 2010-09-09
Description: "Set up CodePipeline pipelines."
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Basic Configuration"
        Parameters:
          - GitHubAccessToken
          - GitHubOwner
          - GitHubRepo
          - GitHubBranch
          - GitHubBranch
          - ECRRegistry
          - FargateEKSCluster
    ParameterLabels:
      GitHubAccessToken:
        default: GitHub Access Token
      GitHubOwner:
        default: GitHub Owner Username
      GitHubRepo:
        default: GitHub Repository
      GitHubBranch:
        default: GitHub Branch
      ECRRegistry:
        default: ECR Registry
      FargateEKSCluster:
        default: Fargate EKS Cluster


Parameters:
  GitHubAccessToken:
    Type: String
    Description: "Enter your GitHub Personal Access Token. Use scopes, select admin:repo_hook and repo. https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: "[a-z0-9]*"
  GitHubOwner:
    Type: String
    Description: "Enter your GitHub username. You're the owner of the forked repo."
    Default: jefferyfry
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubRepo:
    Type: String
    Description: "You probably won't change this. In case you change the repo name, enter it here."
    Default: shift-left-devsecops-aws-lacework
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubBranch:
    Type: String
    Description: "You probably won't change this. In case you change the branch, enter it here."
    Default: master
    AllowedPattern: "[A-Za-z0-9-]+"
  ECRRegistry:
    Type: String
    Description: "Enter your ECR registry."
    Default: 911290716430.dkr.ecr.us-west-2.amazonaws.com
    AllowedPattern: "[^\\s/$.?#].[^\\s]*$"
  FargateEKSCluster:
    Type: String
    Description: "Enter the name of the Fargate EKS Cluster that you created."
    Default: aws-devsecops
    AllowedPattern: "[A-Za-z0-9-]+"
Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "shift-left-devsecops-aws-lacework-artifact-bucket"

  PermissionForEventsToInvokePipeline:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: EventsRolePolicy
      Roles:
        - !Ref CodePipelineEventsRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Resource: "*"
            Effect: Allow
            Action:
              - codepipeline:*

  CodePipelineEventsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "code-pipeline-events-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "code-pipeline-service-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AWS-CodePipeline-Service-3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: '*'
              - Effect: Allow
                Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplication'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:*
                Resource: '*'

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "codebuild-service-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                Resource: "*"
              - Effect: Allow
                Action: eks:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/eks-codebuild-kubectl-role"
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource:
                  - !Join [ '', [ 'arn:aws:ssm:*:', !Ref 'AWS::AccountId', ':parameter/*' ] ]

  EksCodeBuildKubectlRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "eks-codebuild-kubectl-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt CodeBuildServiceRole.Arn
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - eks:Describe*
                Resource: "*"

  CodeBuildBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: shift-left-devsecops-aws-lacework-codebuild-build
      Description: "CodeBuild, Lacework Scan, Push to ECR"
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: "codebuild-scan-push.yml"
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/standard:5.0"
        Type: "LINUX_CONTAINER"
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: IMAGE_NAME
            Value: demo-app
          - Name: DOCKER_REG
            Value: !Ref ECRRegistry
      ServiceRole: !Ref CodeBuildServiceRole

  CodeBuildDeployEksProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: shift-left-devsecops-aws-lacework-codebuild-deploy-eks
      Description: "Deploy to EKS"
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: "codebuild-deploy-eks.yml"
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/standard:5.0"
        Type: "LINUX_CONTAINER"
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: DOCKER_REG
            Value: !Ref ECRRegistry
          - Name: EKS_CLUSTER
            Value: !Ref FargateEKSCluster
          - Name: IMAGE_NAME
            Value: demo-app
          - Name: IMAGE_TAG
            Value: latest
      ServiceRole: !Ref CodeBuildServiceRole

  EKSPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: shift-left-devsecops-aws-lacework-codepipeline-eks
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              InputArtifacts: [ ]
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: !Ref GitHubAccessToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildBuildProject
              InputArtifacts:
                - Name: SourceArtifacts
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 2
        - Name: Deploy
          Actions:
            - Name: UpdateDeployment
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildDeployEksProject
              InputArtifacts:
                - Name: SourceArtifacts
              OutputArtifacts:
                - Name: DeployOutput
              RunOrder: 3

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "code-deploy-service-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

